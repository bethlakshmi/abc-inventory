# Generated by Django 2.2.17 on 2021-03-22 21:48

from django.db import migrations

init_values = [
    {
            'selector': '.inventory-btn-danger',
            'pseudo_class': 'hover',
            'description': 'Hover for buttons that terminate the work',
            'target_element': 'input',
            'usage': 'Forms',
            'prop_val': [('background-color', 'rgba(200,35,51,1)'),
                         ('border-color', 'rgba(189,33,48,1)'),
                         ('color', 'rgba(255,255,255,1)')]},
    {
            'selector': '.inventory-btn-danger',
            'pseudo_class': '',
            'description': 'Buttons like cancel that interrupt work.',
            'target_element': 'input',
            'usage': 'Forms',
            'prop_val': [('background-color', 'rgba(212,46,62,1)'),
                         ('border-color', 'rgba(212,46,62,1)'),
                         ('color', 'rgba(255,255,255,1)')]},
    {
            'selector': '.inventory-btn-danger.active',
            'pseudo_class': '',
            'description': 'Hover for buttons that terminate the work',
            'target_element': 'input',
            'usage': 'Forms',
            'prop_val': [('background-color', 'rgba(189,33,48,1)'),
                         ('border-color', 'rgba(178,31,45,1)'),
                         ('color', 'rgba(255,255,255,1)'),
                         ('box-shadow',
                          'px px px px rgba',
                          '0px -72px 10px 38px rgba(200,35,51,.5)')]},
    {
            'selector': '.image_select_list input[type="checkbox"]:checked + img',
            'pseudo_class': '',
            'description': 'Border around pictures on image management',
            'target_element': 'div',
            'usage': 'Forms',
            'prop_val': [('border-color', 'rgba(0,123,255,1)')]},
    ]


def initialize_style(apps, schema_editor):
    # We get the model from the versioned app registry;
    # if we directly import it, it'll be the wrong version
    StyleVersion = apps.get_model("inventory", "StyleVersion")
    StyleSelector = apps.get_model("inventory", "StyleSelector")
    StyleProperty = apps.get_model("inventory", "StyleProperty")
    StyleValue = apps.get_model("inventory", "StyleValue")
    version = StyleVersion.objects.get(
        name="Baseline",
        number=1.0)

    for select_val in init_values:
        selector = StyleSelector(
            selector=select_val['selector'],
            description=select_val['description'],
            pseudo_class=select_val['pseudo_class'],
            used_for=select_val['usage'])
        selector.save()
        for prop_val in select_val['prop_val']:
            val = prop_val[1]
            if len(prop_val) == 2:
                style_prop = StyleProperty(
                    selector=selector,
                    style_property=prop_val[0],
                    value_type='rgba')
            elif len(prop_val) == 3:
                style_prop = StyleProperty(
                    selector=selector,
                    style_property=prop_val[0],
                    value_type=prop_val[1])
                val = prop_val[2]
            else:
                raise Exception("there should be 2 or 3 values here")
            style_prop.save()
            value = StyleValue(style_property=style_prop,
                               style_version=version,
                               value=val)
            value.save()


class Migration(migrations.Migration):

    dependencies = [
        ('inventory', '0006_auto_20210216_1114'),
    ]

    operations = [
        migrations.RunPython(initialize_style),
    ]
